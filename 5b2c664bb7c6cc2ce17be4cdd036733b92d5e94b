{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5cc63e74_1db70509",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-02-11T18:27:08Z",
      "side": 1,
      "message": "No, the power control / sequencer app will assume the provided power supply error supersedes the pgood error. The power supply app needs to make a determination on the consequences of the power supply error.\n\nTo do the reverse would require the sequencer app to be a pseudo power supply analyzer, require changes to the sequence when new power supply errors are created, etc.",
      "range": {
        "startLine": 12,
        "startChar": 39,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b098ceb3_bfddc4a8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-02-11T19:12:43Z",
      "side": 1,
      "message": "Does the PSU fault only supersede the pgood fault if it\u0027s a PSU pgood that faulted?",
      "parentUuid": "5cc63e74_1db70509",
      "range": {
        "startLine": 12,
        "startChar": 39,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b001fae7_340001a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-02-11T19:56:54Z",
      "side": 1,
      "message": "Not currently. It would be more like FSP systems if it did. Arguably, 12v is the root of the entire voltage tree.",
      "parentUuid": "b098ceb3_bfddc4a8",
      "range": {
        "startLine": 12,
        "startChar": 39,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44a983fc_5686dac2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-02-11T20:03:25Z",
      "side": 1,
      "message": "Yeah, okay, that is a bit of a misstatement then. I was not certain if the control/sequencer app necessarily ALWAYS cared about what was set there.",
      "parentUuid": "b001fae7_340001a6",
      "range": {
        "startLine": 12,
        "startChar": 39,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56171eb6_aee32412",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-02-11T20:08:25Z",
      "side": 1,
      "message": "\u003e Yeah, okay, that is a bit of a misstatement then. I was not certain if the control/sequencer app necessarily ALWAYS cared about what was set there.\n\nYep, the \"If an associated pgood fault also occurs\" part is correct.",
      "parentUuid": "44a983fc_5686dac2",
      "range": {
        "startLine": 12,
        "startChar": 39,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0acfb1d0_e4f1f57b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-02-11T21:46:17Z",
      "side": 1,
      "message": "After further discussion, commit message wording is fine as is. Upcoming power sequencer change will restrict use of power supply error to 12v rail.",
      "parentUuid": "56171eb6_aee32412",
      "range": {
        "startLine": 12,
        "startChar": 39,
        "endLine": 13,
        "endChar": 71
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbd65f34_0b12d092",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-02-17T19:13:43Z",
      "side": 1,
      "message": "Nit: empty?  I think it is set to \"\" not nullptr",
      "range": {
        "startLine": 15,
        "startChar": 37,
        "endLine": 15,
        "endChar": 42
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85fa8f37_2966543a",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-02-16T18:53:44Z",
      "side": 1,
      "message": "theoretically not all every platform that uses this app will also use the pseq app, so this should probably be DEBUG",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80ad2b56_ef083079",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-02-16T18:55:09Z",
      "side": 1,
      "message": "I suppose alternatively you could look for that interface to exist first.",
      "parentUuid": "85fa8f37_2966543a",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "818c094f_ea892fa1",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-02-16T23:03:05Z",
      "side": 1,
      "message": "I could make this DEBUG, that would sort of be a quick fix.\n\nLooking to see if the interface exists first might be better, but I am not so sure I have had to check for an interface existence before, so not sure what that looks like just yet.\n\nIf it does not exist, should it? How do I know it should exist?\n\nIf it does not exist, and it should, is that an error or a debug trace?\n\nIf the interface exists, and the method call fails, that would be an error... I think.",
      "parentUuid": "80ad2b56_ef083079",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "817ddb6d_ad7b471e",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-02-17T14:13:51Z",
      "side": 1,
      "message": "if it doesn\u0027t exist, then it doesn\u0027t need to know about your error.\n\nIf you want to hardcode the path, then you can just use GetObject, so you can just use getService() and check for an empty service/fail.  If you don\u0027t want to hardcode the path, you can use GetSubTree to give you the path and service.",
      "parentUuid": "818c094f_ea892fa1",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09bce4e0_8c6e28e2",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-02-17T19:13:43Z",
      "side": 1,
      "message": "I don\u0027t think there are any pre-reqs between these two apps in their service files.\n\nThus, it seems possible (?) that the PSU monitor could detect a PSU problem and try to call this interface before the sequencer app is running.  If so, I\u0027d assume this D-Bus call would fail.\n\nIt would be easier if the PSU monitor was setting this sort of property on a D-Bus interface that it owned (e.g. xyz.openbmc_project.Power.PowerSupplyManager, hasDetectedError or whatever).  Then there would be no dependency on whether a certain power sequencer app is being used.  However, given that the sequencer interface is already merged, it is probably too late for this idea.",
      "parentUuid": "817ddb6d_ad7b471e",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff419cff_39d94434",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-02-17T19:43:44Z",
      "side": 1,
      "message": "\u003e I don\u0027t think there are any pre-reqs between these two apps in their service files.\n\u003e \n\u003e Thus, it seems possible (?) that the PSU monitor could detect a PSU problem and try to call this interface before the sequencer app is running.  If so, I\u0027d assume this D-Bus call would fail.\n\nThe power supply app already depends on the power sequencer app, using this interface, to tell it if the power is on. So as long as the power supply error is only set with the power on, we should be ok from a pre-req perspective.",
      "parentUuid": "09bce4e0_8c6e28e2",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eda068f7_90141c03",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-02-17T21:42:26Z",
      "side": 1,
      "message": "Okay, so, if the power supply monitor is not depending on the power sequencer app, then the interface will not exist, so we will not try to set that property, and all is good.\n\nIf the power supply monitor is the one depending on the power sequencer app (e.g. IBM), we will check for the interface existence, it better be there, as that is what is setting up what we are looking for in our powerState match in PSUManager. The interface exists, we try to set it, if it fails, now we have a problem/error.\n\nI will try to code up checking for the interface to exist.",
      "parentUuid": "ff419cff_39d94434",
      "range": {
        "startLine": 398,
        "startChar": 12,
        "endLine": 398,
        "endChar": 22
      },
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa5f1665_6e97d427",
        "filename": "phosphor-power-supply/psu_manager.hpp",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-02-17T19:13:43Z",
      "side": 1,
      "message": "What is the desired behavior in the following scenario?\n* PSU logs an error\n* setPowerSupplyError() is called to notify the sequencer app\n* PSU is removed or replaced\n\nShould setPowerSupplyError() get called with \"\" since the PSU that had logged an error is no longer present?  If so, I don\u0027t think the code currently does that?\n\nAlso, if a PSU had an error and it goes away, should setPowerSupplyError() get called with \"\"?  e.g. a PSU wasn\u0027t working, but now it is, so is it still the source of a pgood problem?\n\nI\u0027m not sure what the requirement is with either of these.  Just asking the question.",
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e266f4c_c3f76f47",
        "filename": "phosphor-power-supply/psu_manager.hpp",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-02-17T21:42:26Z",
      "side": 1,
      "message": "I would think the desired behavior for this is that the error is logged, then when the PSU is removed, leave the error property set. Otherwise, I could see there being some confusion with certain errors and an attempt to fix it:\n* Power supply IOUT OC fault. Power supply shuts down.\n* setPowerSupplyError() called. I think I have seen PSU OC faults associated with pgood faults in the past, perhaps not always.\n* Power supply is removed. (No additional fault to log, fixing the first fault)\n* New/fixed power supply inserted, configured, clearFaults() called (you are here).\n\nEither no pgood fault happened, and the fault was not used, or inserting the new supply cleared the setPowerSupplyError() as there is currently no fault to log (yet).\n\nIf there was no fault, and the power supply is removed, could that cause a pgood fault? I am not so sure, but setPowerSupplyError() would indicate that the last fault was a power supply missing. Insert new supply, clear that error.",
      "parentUuid": "fa5f1665_6e97d427",
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "491dab6e_8bba5833",
        "filename": "phosphor-power-supply/psu_manager.hpp",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-02-17T22:39:21Z",
      "side": 1,
      "message": "Side chat on this. The clearFaults() for the power supply will be cleared when a power supply is replaced. That is separate from this call in PSUManager, where it will clear the faults for all the power supplies when the power changes from off to on.\n\nThere is potentially more than one power supply logging an error. Chances are, you cannot replace a power supply causing a pgood fault prior to the power sequencer shutting the power off.",
      "parentUuid": "4e266f4c_c3f76f47",
      "revId": "5b2c664bb7c6cc2ce17be4cdd036733b92d5e94b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}