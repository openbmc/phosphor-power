{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ab8c846_34f773c0",
        "filename": "phosphor-power-sequencer/src/services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-02-07T20:16:46Z",
      "side": 1,
      "message": "i don\u0027t think you need the c_str() with lg2?",
      "range": {
        "startLine": 164,
        "startChar": 27,
        "endLine": 164,
        "endChar": 34
      },
      "revId": "f824bf14978703bd862599368b1eb685b1a5bbd3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "383619f0_2929be76",
        "filename": "phosphor-power-sequencer/src/services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2024-02-07T21:47:10Z",
      "side": 1,
      "message": "When I tried building without the .c_str(), it resulted in these errors:\n\n```\n../phosphor-power-sequencer/src/services.hpp:164:19: error: unnecessary parentheses in declaration of ‘message’ [-Werror\u003dparentheses]\n164 |         lg2::error(message);\n    |                   ^~~~~~~~~\n../phosphor-power-sequencer/src/services.hpp:164:19: note: remove parentheses\n164 |         lg2::error(message);\n    |                   ^~~~~~~~~\n    |                   -       -\n```",
      "parentUuid": "5ab8c846_34f773c0",
      "range": {
        "startLine": 164,
        "startChar": 27,
        "endLine": 164,
        "endChar": 34
      },
      "revId": "f824bf14978703bd862599368b1eb685b1a5bbd3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39643839_6ae1085a",
        "filename": "phosphor-power-sequencer/src/services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-02-07T21:49:17Z",
      "side": 1,
      "message": "I was thinking about it some more, and now I think it specifically doesn\u0027t take a string because Patrick didn\u0027t want people doing what you\u0027re doing :)  which is passing in already formatted strings.\n\n```\nNote: Since a free-form message with data can be created using the `{KEY}`\nmechanism, no other string formatting libraries are necessary or should be used.\nAvoiding the `{KEY}` feature causes the journal messages to become unstructured.\nDo not use `sstream` or `{fmt}` to format the message!\n```",
      "parentUuid": "383619f0_2929be76",
      "range": {
        "startLine": 164,
        "startChar": 27,
        "endLine": 164,
        "endChar": 34
      },
      "revId": "f824bf14978703bd862599368b1eb685b1a5bbd3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab5eb8a3_9eebee26",
        "filename": "phosphor-power-sequencer/src/services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2024-02-07T21:53:43Z",
      "side": 1,
      "message": "I realize I am not using this API in the intended way, since it is losing the source location and the template string + replacement parameters.\n\nHowever, I\u0027d really like to be able to make gmock assertions on what gets written to the journal.  Sometimes that is the main indication that you are down a particular error path.",
      "parentUuid": "39643839_6ae1085a",
      "range": {
        "startLine": 164,
        "startChar": 27,
        "endLine": 164,
        "endChar": 34
      },
      "revId": "f824bf14978703bd862599368b1eb685b1a5bbd3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}