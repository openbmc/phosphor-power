{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c2acb6dd_7dfcf55a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-04-28T14:42:25Z",
      "side": 1,
      "message": "just curious, why not?  \n\n(maybe good to put that in commit message for posterity)",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d7a2c4_94e529c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-04-28T16:53:25Z",
      "side": 1,
      "message": "Ah! Yeah, nice to point out why I am doing this.\n\nTrying to:\n1) Avoid logging additional errors.\n2) Avoid logging additional error that calls out power supply and turns on LED.",
      "parentUuid": "c2acb6dd_7dfcf55a",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa54325d_27f6a9ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-04-28T17:04:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75d7a2c4_94e529c2",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b025baf2_bd675da4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-04-28T14:32:46Z",
      "side": 1,
      "message": "I think this is ok.  On FSP we\u0027d believe the last input value (110 or 220) that was set before the loss of AC, here it looks like we\u0027ll temporarily skip the checking until AC returns, then check it at that point.  Two questions-\n1. Will we in fact keep trying to run validateConfig() until the config checking has successfully completed (ie will we keep calling it until runValidateConfig is false)?\n2. Is validateConfig() only called when the system is booting/powered on?",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9073cb2d_5baac17c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-04-28T16:59:03Z",
      "side": 1,
      "message": "Pretty sure validateConfig() runs on startup, after a power on, or after a presence change. Re-checked the code to confirm that. \n\nThe validateConfig() will continue to get called as long as runValidateConfig is true. Since we do not set it to false, due to bailing out (similar to the supportedConfigs.empty() or psus.empty()) it will return later when the timer expires.",
      "parentUuid": "b025baf2_bd675da4",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aeb3343_3c174519",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-04-28T18:18:29Z",
      "side": 1,
      "message": "Correct, just to expand:\n\n\u003e validateConfig() runs on startup\nas long as power is on when the BMC comes back fro reboot, if it\u0027s off it won\u0027t run until power on is started.\n\n\u003e it will return later when the timer expires.\nwhich is triggered by a state change so it\u0027ll run on the next power on\n\nOne question would be, if the VIN FAULT is resolved, should the validation be run? Just thinking of a scenario where psu has a VIN FAULT at power on (does the system stay powered on?), the validation is skipped, then the VIN FAULT is resolved, and the system may have an invalid configuration but would not be known until the system is reIPLd.",
      "parentUuid": "9073cb2d_5baac17c",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8374899a_5098a725",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-04-28T18:32:01Z",
      "side": 1,
      "message": "\u003e One question would be, if the VIN FAULT is resolved, should the validation be run? Just thinking of a scenario where psu has a VIN FAULT at power on (does the system stay powered on?), the validation is skipped, then the VIN FAULT is resolved, and the system may have an invalid configuration but would not be known until the system is reIPLd.\n\nThanks for the comments, yep that is exactly my concern as well.  If AC returns only after the timer expires, sounds like we wouldn\u0027t tell the customer they have an invalid config at any point.  \n\nOptimally, when AC returned, we would do the validation then.  Can we, once the timer expires, try to do the validation then (assuming we haven\u0027t already validated it), and if AC is still gone, kick the timer off again or something like that (or any other options)?\n\nThis is a double-failure scenario so if it\u0027s too complex so be it, but if it\u0027s an easy fix, that would be the desired behavior (eventually telling them invalid config if it is the case).",
      "parentUuid": "5aeb3343_3c174519",
      "revId": "4be06acfc64dacfc7fba7ee80ae573ad58da336c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}