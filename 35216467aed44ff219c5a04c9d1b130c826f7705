{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "772bbe07_bd64df98",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 812,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-12-13T00:35:24Z",
      "side": 1,
      "message": "Previously this was always done in setBrownout() regardless of whether brownoutLogged was true.\n\nNow it appears we won\u0027t set the powerSystemInputs D-Bus interface if we have already logged a brownout error.  Is that an issue?  e.g. is there a scenario where we need to set it even when an error was previously logged and not cleared?",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd275b44_d3b3bca1",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 812,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-12-13T15:02:54Z",
      "side": 1,
      "message": "I think it\u0027s ok, the only scenario I could think of is a brownout after a blackout, but the psu\u0027s might not even report the AC loss unless they tried to turn on anyway...",
      "parentUuid": "772bbe07_bd64df98",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1932963_18e35d4c",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 829,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-12-13T00:35:24Z",
      "side": 1,
      "message": "In the old code in setBrownout(), createError() was within an if check:\n\n```\nif (powerOn)\n{\n}\n```\n\nIs that not needed within the new algorithm?  Does checking the powerFaultOccurring always cover the same scenarios?",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07f8c50_cc11587e",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 829,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-12-13T15:02:54Z",
      "side": 1,
      "message": "yeah i thought powerFaultOccurring would only get set if powerOn on",
      "parentUuid": "f1932963_18e35d4c",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3886577a_0ee2eb8f",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 829,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-12-14T02:47:25Z",
      "side": 1,
      "message": "Correct, powerFaultOccurring is true only when powerOn is true, so it was a redundant check.",
      "parentUuid": "c07f8c50_cc11587e",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f83d0c7d_d621b6a5",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 838,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-12-13T00:35:24Z",
      "side": 1,
      "message": "I thought, due to unpredictable behavior with the VIN_UV_FAULT bit, we were considering the system to be in brownout if (presentCount \u003d\u003d (acFailedCount + pgoodFailedCount)).  e.g. all the PSUs are in either AC fault or PGOOD fault.\n\nDue to the complexity of the if on line 807, could we go into the enclosed block even if we are still in brownout?  e.g. powerFaultOccurring is false, one PSU is in AC fault, one is in PGOOD fault.\n\nIf so, is that intended?",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d23f3e_161a0355",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 838,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-12-13T15:02:54Z",
      "side": 1,
      "message": "we need at least 1 of the psu to report ac fault, and the rest can report either/both...",
      "parentUuid": "f83d0c7d_d621b6a5",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1684e4fc_e140bc48",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 838,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-12-14T02:47:25Z",
      "side": 1,
      "message": "It is unfortunate that we can\u0027t rely on the PSU device to correctly report AC fault. When the power is off pgood is off, so we can\u0027t use that to know if the condition is cleared. I think we have to err on the side of allowing the system to try to power on, otherwise a system with a power supply unplugged that then experiences a brownout would be not able to power back on.",
      "parentUuid": "f5d23f3e_161a0355",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88e2370c_964f27d6",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-12-13T00:35:24Z",
      "side": 1,
      "message": "Previously in clearBrownout() this was done any time a brownout was not occurring.  \n\nFrom the commit message, I believe the desire is to only set this to Good when the chassis is off.  However, the if on line 838 will cause this to happen only if brownoutLogged is true.\n\nAre there any scenarios where we should be setting this to Good that we will miss now?\n\nFor example, what about the initial case when this app is first started?  Are we relying on a default value of Good from the YAML file?  If so, should we explicitly set it in our code in case someone removes/modifies the default in the YAML?",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8931d4a5_0480cb5c",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-12-13T15:02:54Z",
      "side": 1,
      "message": "interesting, I was wondering about after a bmc reset as well.  if the status is persisted then we\u0027d need to clear it after a brownout turns into a blackout... but if it always gets set to the default of Good then maybe it\u0027s fine...",
      "parentUuid": "88e2370c_964f27d6",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d940d383_bb384163",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 863,
      "author": {
        "id": 1000387
      },
      "writtenOn": "2022-12-14T02:47:25Z",
      "side": 1,
      "message": "I not catching on to what the missing case is. The default is Good. If someone can break our interface out from underneath us, we shouldn\u0027t be using YAML. I don\u0027t see that as different in principle from any other dependency making a breaking change.",
      "parentUuid": "8931d4a5_0480cb5c",
      "revId": "35216467aed44ff219c5a04c9d1b130c826f7705",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}