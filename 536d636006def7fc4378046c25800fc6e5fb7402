{
  "comments": [
    {
      "key": {
        "uuid": "b59def8d_38fac5dc",
        "filename": "utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-18T01:43:13Z",
      "side": 1,
      "message": "I prefer not to use the `service` parameterï¼Œ\nNow, if you call getAllProperties, need to run two steps:\n1. call getService()\n2. call getAllProperties()\n\nI prefer to merge them together:\n\n```\nDbusPropertyMap properties;\nauto service \u003d getService(objectPath, interface, bus);\nif (service.empty())\n{\n    return properties;\n}\n\nauto method \u003d bus.new_method_call(service.c_str(), path.c_str(),\n                                      PROPERTY_INTF, \"GetAll\");\nmethod.append(interface);\nauto reply \u003d bus.call(method);\nreply.read(properties);\nreturn properties;\n```",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 77,
        "endChar": 22
      },
      "revId": "536d636006def7fc4378046c25800fc6e5fb7402",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74da62f3_c07de55e",
        "filename": "utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2021-03-18T13:40:06Z",
      "side": 1,
      "message": "I understand what you are saying George, but there are performance advantages to the way Adriana implemented it.\n\nD-Bus calls are fairly slow/expensive, so we should try to avoid unnecessary ones where possible.  If the caller has to call getAllProperties() multiple times for the same service, it would be better to do the following:\n* Call getService() once\n* Call getAllProperties() multiple times, passing in the service name\n\nYou can certainly push up a commit with a second overload of getAllProperties() that automatically finds the service.  Then callers can choose the overload the fits their needs.",
      "parentUuid": "b59def8d_38fac5dc",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 77,
        "endChar": 22
      },
      "revId": "536d636006def7fc4378046c25800fc6e5fb7402",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d015493e_55b80afb",
        "filename": "utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-18T13:50:21Z",
      "side": 1,
      "message": "I agree that there may be a caller that already has the service from a getsubtree call for example, but let me look at making the service parameter optional, so that if it\u0027s not passsed, we call getService().",
      "parentUuid": "74da62f3_c07de55e",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 77,
        "endChar": 22
      },
      "revId": "536d636006def7fc4378046c25800fc6e5fb7402",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29db2f2b_f84f93bc",
        "filename": "utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-18T18:41:11Z",
      "side": 1,
      "message": "Done. Added the service as an optional parameter, if not passed, the function will call getService().",
      "parentUuid": "d015493e_55b80afb",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 77,
        "endChar": 22
      },
      "revId": "536d636006def7fc4378046c25800fc6e5fb7402",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}