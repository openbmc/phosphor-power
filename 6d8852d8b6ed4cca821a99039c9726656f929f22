{
  "comments": [
    {
      "key": {
        "uuid": "26d98012_f670714d",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 405,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-16T16:58:28Z",
      "side": 1,
      "message": "do we need to check the input_fault_warning bit here too?",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60d0b187_9cc9d92c",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 405,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2021-12-16T22:23:58Z",
      "side": 1,
      "message": "Supposedly INPUT_FAULT_WARN can come on for any of these:\n7 VIN OV Fault\n6 VIN OV Warning\n5 VIN UV Warning\n4 VIN UV Fault\n3 Unit Off For Low Input Voltage\n2 IIN OC Fault\n1 IIN OC Warning\n0 PIN OP Warning\nAre we thinking we want to trace for INPUT_FAULT_WARN magically going off as well?",
      "parentUuid": "26d98012_f670714d",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fd198cc_877bdb39",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 405,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-17T15:39:56Z",
      "side": 1,
      "message": "Well we\u0027ll log an AC loss error if input_fault bit is on (as we would for vin_uv), so it would seem to follow if the input_fault bit goes off we should do the same things that we do for vin_uv going off.  I.e., if we treat those bits the same for the error happening, shouldn\u0027t we treat them the same for the error clearing?\n\nOn FSP systems we wouldn\u0027t even look at vin_uv, all latched AC detection was based on the input_fault bit.  We told the ps guys we\u0027d look at vin_uv now on bmc as well, which is fine, but that doesn\u0027t mean we can ignore the input_fault bit.",
      "parentUuid": "60d0b187_9cc9d92c",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e03e1a95_4997791b",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 413,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-12-16T15:54:07Z",
      "side": 1,
      "message": "you don\u0027t need to do vinUVFault \u003d false here?",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9f64752_0cb12f30",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 413,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2021-12-16T22:19:50Z",
      "side": 1,
      "message": "Hrm... I was thinking we wanted to avoid that, but the change was to not do the clearFaults() call. In the case where everything goes back to good, I am clearing vinUVFault (setting it to false).\n\nMakes sense to do the vinUVFault \u003d false here if I do it in the other case?",
      "parentUuid": "e03e1a95_4997791b",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27e95756_f59955f1",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 426,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-16T16:58:28Z",
      "side": 1,
      "message": "how do we know in these 2 cases if it cleared without us sending the clear_fault (or reading the 0x7C)?  the lack of the \"READ_VIN back in range: inputVoltageOld \u003d {} inputVoltage \u003d {}\" entry?",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61753a76_68ea0f38",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 426,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2021-12-16T22:28:19Z",
      "side": 1,
      "message": "I was thinking yes, but are you thinking of maybe a case of:\n1. present, VIN_UV\n2. missing\n3. present, clearFaults(), VIN good.\n?",
      "parentUuid": "27e95756_f59955f1",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0b2dce_ad7a0942",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 426,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-17T15:39:56Z",
      "side": 1,
      "message": "No I\u0027m not thinking of a missing scenario, just the bits clearing either with or without us sending the clear faults.  I think the lack of the entry is fine.",
      "parentUuid": "61753a76_68ea0f38",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02163ad0_027ac30b",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 463,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-16T16:58:28Z",
      "side": 1,
      "message": "are we guaranteed to do the next set of poll cmds after doing the clear faults here, and before we come into this routine the next second?",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dda163e0_7dcac32c",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 463,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2021-12-16T22:30:44Z",
      "side": 1,
      "message": "If we are in this routine, analyze(), and the power supply is present, we would attempt to read the STATUS_WORD.\n\nIf we are in this routine, analyze(), and the power supply is missing, we will not do any of the commands.\n\nAm I not following the question?",
      "parentUuid": "02163ad0_027ac30b",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04e23aba_01a3a26f",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 4
      },
      "lineNbr": 463,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-17T15:39:56Z",
      "side": 1,
      "message": "No you are not following the question.  Nothing to do with any ps missing.  We want to guarantee 1 and only 1 reading of the status registers between each time we go through this analyze() function.\n\nFor instance, in this path, we want the sequence to be:\n1. \"poll\" cmds sent.\n2. analyze() -\u003e clear faults cmd sent.\n3. next \"poll\" cmds sent.\n4. analyze() called, we see the faults cleared correctly etc.\n\nWe DON\u0027T want the sequence to be:\n1. \"poll\" cmds sent.\n2. analyze() -\u003e clear faults cmd sent.\n4. analyze() called, we see the faults not cleared because there was no \"poll\" cmds sent between the analyze() calls.\n\nand we DON\u0027T want the sequence to be:\n1. \"poll\" cmds sent.\n2. analyze() -\u003e clear faults cmd sent.\n3. next \"poll\" cmds sent.\n4. next \"poll\" cmds sent.\n5. analyze() called, but there were 2 sets of \"poll\" cmds sent in between.",
      "parentUuid": "dda163e0_7dcac32c",
      "revId": "6d8852d8b6ed4cca821a99039c9726656f929f22",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}