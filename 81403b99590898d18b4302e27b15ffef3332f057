{
  "comments": [
    {
      "key": {
        "uuid": "a2ad1be5_3a350fa2",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 1
      },
      "lineNbr": 572,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-03T01:20:54Z",
      "side": 1,
      "message": "Nit: Could you use `std::from_chars` instead of `std::stoi`?\n\n```\n#include \u003ccharconv\u003e\n\nint PowerSupply::getInputVoltage(std::string inputVoltageStr)\n{\n    if (!present)\n    {\n        return 0;\n    }\n\n    int inputVol \u003d 0;\n    auto inputVoltageStr \u003d pmbusIntf-\u003ereadString(phosphor::pmbus::READ_VIN,\n                                                 phosphor::pmbus::Type::Hwmon);\n    std::from_chars(inputVoltageStr.c_str(),\n                    inputVoltageStr.c_str() + inputVoltageStr.length(),\n                    inputVol);\n\n    return inputVol;\n}\n```",
      "range": {
        "startLine": 556,
        "startChar": 4,
        "endLine": 572,
        "endChar": 5
      },
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49c90f7d_472494da",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 1
      },
      "lineNbr": 572,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-08-04T19:32:14Z",
      "side": 1,
      "message": "Looking at std::from_chars, seems like it doesn\u0027t handle any characters other than 0, so a string of \"0x33\" would be converted to 0, versus std::stoi would convert it to 51. I see that some pmbus values are hex strings, such as status0:\n\n$ cat /sys/kernel/debug/pmbus/hwmon12/status0\n0x0841\n\nMy concern would be that in1_input would change to be a hex string, and then the validate function would break. So maybe std::stoi is more future-proof in this case?",
      "parentUuid": "a2ad1be5_3a350fa2",
      "range": {
        "startLine": 556,
        "startChar": 4,
        "endLine": 572,
        "endChar": 5
      },
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd51dbec_78e75877",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 1
      },
      "lineNbr": 572,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-06T01:11:11Z",
      "side": 1,
      "message": "\u003e Looking at std::from_chars, seems like it doesn\u0027t handle any characters other than 0, so a string of \"0x33\" would be converted to 0, versus std::stoi would convert it to 51. I see that some pmbus values are hex strings, such as status0:\n\n\nI did a test:\n```\nstd::string str \u003d \"0x33\";\nstd::cerr \u003c\u003c \"str value \u003d \" \u003c\u003c std::stoi(str) \u003c\u003c std::endl;\n```\n\nThe printed result is 0, and this result value is the same as `std::from_chars`.\nSorry, Maybe I missing something?",
      "parentUuid": "49c90f7d_472494da",
      "range": {
        "startLine": 556,
        "startChar": 4,
        "endLine": 572,
        "endChar": 5
      },
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6f51bdc_d417f0cc",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 1
      },
      "lineNbr": 572,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-08-06T13:22:36Z",
      "side": 1,
      "message": "std::stoi has other arguments that say which base the value is in, or if it should be autodetected.",
      "parentUuid": "bd51dbec_78e75877",
      "range": {
        "startLine": 556,
        "startChar": 4,
        "endLine": 572,
        "endChar": 5
      },
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e36c7ad0_4249659f",
        "filename": "phosphor-power-supply/power_supply.hpp",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-08-03T12:02:58Z",
      "side": 1,
      "message": "Should this function return the actual voltage instead of having the validate function call two separate functions, one to get the pmbus reading and one to convert it to actual voltage?",
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a4a5e1_0126f97d",
        "filename": "phosphor-power-supply/power_supply.hpp",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-08-04T19:32:14Z",
      "side": 1,
      "message": "Done. It retuns the actual voltage now.",
      "parentUuid": "e36c7ad0_4249659f",
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20946da5_c26aad5b",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-08-03T12:02:58Z",
      "side": 1,
      "message": "This check is not needed. Some power supplies can run at either 110V or 220V, that\u0027s the reason the supported configuration schema has an array of supported voltages for each PSU model.",
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "795eacd0_dfa1a2bb",
        "filename": "phosphor-power-supply/psu_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-08-04T19:32:14Z",
      "side": 1,
      "message": "Done. Removed.",
      "parentUuid": "20946da5_c26aad5b",
      "revId": "81403b99590898d18b4302e27b15ffef3332f057",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}