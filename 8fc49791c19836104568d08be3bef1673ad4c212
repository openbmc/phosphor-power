{
  "comments": [
    {
      "key": {
        "uuid": "03a589f3_f3b8bf5f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-05T18:53:23Z",
      "side": 1,
      "message": "Can the regulators be configured during the boot? Sounds like we won\u0027t prevent the boot from happening (instead an error is logged), so trying to see if we could call to configure the regulators when the EM interfaces added callback runs instead of blocking. Also if there are no compatible system types for that system, we\u0027d be blocking the boot for 5 min every time.",
      "revId": "8fc49791c19836104568d08be3bef1673ad4c212",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e62307ed_22f0a6a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2021-04-05T19:12:36Z",
      "side": 1,
      "message": "\u003e Can the regulators be configured during the boot?\n\nThe regulators need to be configured before they are powered on by the power sequencer.  That occurs very early in the boot.  Otherwise, if the default regulator settings (like output voltage) are significantly wrong, hardware damage could occur.  Also, some regulators don\u0027t allow certain configuration changes to be made after being powered on.\n\n\u003e Sounds like we won\u0027t prevent the boot from happening (instead an error is logged)\n\nThe requirement is actually to stop the boot if the app cannot configure the regulators.  The error logged has a special severity that will cause the boot to stop.\n\n\u003e Also if there are no compatible system types for that system, we\u0027d be blocking the boot for 5 min every time.\n\nThe regulators application is optional, so an OpenBMC system builder needs to \"opt into\" it.  When using the regulators app, there are two options for finding the JSON config file:\n* Use the default file name\n* Get file name based on EM info\n\nThe 5 minute wait will only occur in the following scenario:\n* Default file name not found, and\n* No compatible system types info found on D-Bus",
      "parentUuid": "03a589f3_f3b8bf5f",
      "revId": "8fc49791c19836104568d08be3bef1673ad4c212",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7654c309_78995e15",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-05T19:32:56Z",
      "side": 1,
      "message": "Thanks makes sense.\nOne more question I just thought about, did you test forcing the code to sleep for 4 min for example, to see if the power on path can handle being blocked for that long? Just curious if there would be any systemd service file timeouts that would get triggered because of dependencies.",
      "parentUuid": "e62307ed_22f0a6a4",
      "revId": "8fc49791c19836104568d08be3bef1673ad4c212",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da086f01_f81c7084",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2021-04-05T20:30:13Z",
      "side": 1,
      "message": "I definitely tested where it had been blocked for several minutes and then restarted EM.  The boot did seem to successfully continue after EM published the interface.  I\u0027m not sure, however, exactly how long I waited.  It was probably in the 2-4 minute range.\n\nIf you do `obmcutil -w chassison`, obmcutil returns after about 30 seconds stating it couldn\u0027t tell if the boot succeeded.  But later, when the boot completes, `obmcutil state` will show that the chassis is powered on.\n\nThe regulators application starts running at BMC Ready and stays running whether the system is powered on or off.  During the boot, a tool called regsctl does a D-Bus method call on the regulators application to request that the regulators be configured.  I found that by default, this method call timed out after 20 or 30 seconds.  That is why I had to change the utility.hpp file used by regsctl and specify a 6 minute timeout.",
      "parentUuid": "7654c309_78995e15",
      "revId": "8fc49791c19836104568d08be3bef1673ad4c212",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}