{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c4ea062_84e38632",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-04-21T15:08:39Z",
      "side": 1,
      "message": "Hi,\n\nThanks for submitting this change.\n\nIt would be good to update the following regulators service files as well:\n* phosphor-regulators-monitor-enable.service\n* phosphor-regulators-monitor-disable.service\n\nThey also call a D-Bus method on the regulators app to start/stop regulator monitoring.  So they have the same dependency.\n\nDo you mind adding that to your commit?\n\nAlso, rather than have all three dependent services copy/paste the same mapper-wait lines, I think the recommended approach would be to add the following to the phosphor-regulators.service instead:\n  Type\u003ddbus\n  BusName\u003dxyz.openbmc_project.Power.Regulators\n\nI believe this causes systemd to not consider the phosphor-regulators application started until it claims that bus name.\n\nWould that accomplish what you are looking for?  If so, the mapper-wait lines could be removed from the dependent services.  That would remove a dependency on the mapper to provide synchronization.",
      "revId": "8472e09e276c92f25200735a2c102fd91ca3cb2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4afb3e36_b1c9b873",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-04-21T18:58:37Z",
      "side": 1,
      "message": "\u003e Do you mind adding that to your commit?\n\nSure, happy to do that.\n\n\u003e I believe this causes systemd to not consider the phosphor-regulators application started until it claims that bus name.\n\u003e \n\u003e Would that accomplish what you are looking for?  If so, the mapper-wait lines could be removed from the dependent services.  That would remove a dependency on the mapper to provide synchronization.\n\nThat does seem like a cleaner approach, though I\u0027d be somewhat worried that it would still leave a (probably narrow) race window between claiming the bus name and actually instantiating the dbus object, during which the regulators-config unit (and/or others) could get started but still fail.  Is there anything to prevent that from potentially happening?",
      "parentUuid": "2c4ea062_84e38632",
      "revId": "8472e09e276c92f25200735a2c102fd91ca3cb2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47d83c07_63d9258d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-04-21T19:34:08Z",
      "side": 1,
      "message": "The D-Bus object, which is of type ManagerObject, is created in the initialization list of the Manager constructor:\n\nhttps://github.com/openbmc/phosphor-power/blob/master/phosphor-regulators/src/manager.cpp#L75\n\nThe D-Bus service name is claimed later in that constructor:\n\nhttps://github.com/openbmc/phosphor-power/blob/master/phosphor-regulators/src/manager.cpp#L101\n\nMy understanding is that these should happen synchronously, and thus there isn\u0027t a race condition.  I\u0027m not a D-Bus expert so if you are aware of a possible issue let me know.\n\nHowever, in looking at the call to the ManagerObject constructor (which creates the D-Bus object), I see that it is specifying the third parameter to defer emitting an ObjectAdded/InterfacesAdded signal.  I think if we want to make this service file change, we should remove that parameter and let it default to emitting the signal.  I believe someone else wrote that code, and I don\u0027t see a reason we need to defer the signal.\n\nSo if you could also change\n  ManagerObject{bus, managerObjPath, ManagerObject::action::defer_emit},\nto\n  ManagerObject{bus, managerObjPath},\n\nI think we\u0027d be in good shape.  Let me know if that doesn\u0027t work for you.",
      "parentUuid": "4afb3e36_b1c9b873",
      "revId": "8472e09e276c92f25200735a2c102fd91ca3cb2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d84a7bb6_dc58076e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-04-21T20:53:10Z",
      "side": 1,
      "message": "\u003e My understanding is that these should happen synchronously, and thus there isn\u0027t a race condition.  I\u0027m not a D-Bus expert so if you are aware of a possible issue let me know.\n\nAh, got it -- I had thought those happened in the opposite order for some reason, thanks for the correction.  I\u0027m far from a dbus expert myself, but that certainly sounds like it should be OK.\n\n\u003e I think if we want to make this service file change, we should remove that parameter and let it default to emitting the signal.  I believe someone else wrote that code, and I don\u0027t see a reason we need to defer the signal.\n\nAlright, I\u0027ll test it out with all of the above changes incorporated and post an updated version of the patch -- thanks for the pointer there.",
      "parentUuid": "47d83c07_63d9258d",
      "revId": "8472e09e276c92f25200735a2c102fd91ca3cb2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb2d9c1b_37d561c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-04-21T22:13:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d84a7bb6_dc58076e",
      "revId": "8472e09e276c92f25200735a2c102fd91ca3cb2e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}