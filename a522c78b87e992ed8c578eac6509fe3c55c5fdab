{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "93c8eadc_357282a5",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-22T15:35:57Z",
      "side": 1,
      "message": "does readFail get cleared every power up, and when a new psu is plugged in, as well?",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8d744a8_020cd809",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-06T23:19:35Z",
      "side": 1,
      "message": "Yes.\n\n1. cleared every powerup:\nhttps://github.com/openbmc/phosphor-power/blob/e3f7ad238a5ffaa87e19839ce15c12c3e8df9c9e/phosphor-power-supply/psu_manager.cpp#L349\nPSUManager::powerStateChanged(...) power state is 1 (on), call clearFaults().\n\n2. new psu is plugged in\nhttps://github.com/openbmc/phosphor-power/blob/e3f7ad238a5ffaa87e19839ce15c12c3e8df9c9e/phosphor-power-supply/power_supply.cpp#L177\npresentOld !\u003d present:\nclearFaults() called if present is true (new psu is plugged in)",
      "parentUuid": "93c8eadc_357282a5",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d49be2c8_69603568",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-04T17:26:09Z",
      "side": 1,
      "message": "If I\u0027m reading it right, won\u0027t this create multiple error logs for when readFail \u003d 1 and 2?",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d21ebf8f_855b9694",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-06T23:19:35Z",
      "side": 1,
      "message": "Yes, and we were doing this all along, basically...\n\nFred Freck actually asked about this while investigating an issue on an Everest system. That underlying ReadFailure ends up creating a BD571008 PEL.",
      "parentUuid": "d49be2c8_69603568",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51e18da0_96318ab4",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-06T23:30:29Z",
      "side": 1,
      "message": "Should I change something here?",
      "parentUuid": "d21ebf8f_855b9694",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c1da53e_118fc9b2",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-07T20:45:41Z",
      "side": 1,
      "message": "I guess I would vote for it only creating a single error log.",
      "parentUuid": "51e18da0_96318ab4",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfdd7c34_771d1190",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-08T00:01:13Z",
      "side": 1,
      "message": "What would be the best way to do that?\nif (readFail \u003c (LOG_LIMIT -1)) ???",
      "parentUuid": "8c1da53e_118fc9b2",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ae8c7af_a61d622d",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-10T16:09:01Z",
      "side": 1,
      "message": "Maybe change readFail to a bool?  Not sure if there\u0027s a reason to count them now, unless I\u0027m forgetting something.",
      "parentUuid": "cfdd7c34_771d1190",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ebbe878_2ae48dc9",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-01-10T21:24:21Z",
      "side": 1,
      "message": "What is the design/requirement for handling repeated errors?\n\nFor the regulator code, most operations log an error once per boot and write up to three error messages to the journal.  So the counter is different for error logs vs. journal messages.  Not sure what your requirement is for the PSU code.  PSUs are more complex since they can be hot-plugged, and I\u0027d assume you need to reset counters when a PSU goes from missing to present.",
      "parentUuid": "0ae8c7af_a61d622d",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9eb1108_ec432b95",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-10T23:49:39Z",
      "side": 1,
      "message": "We didn\u0027t want to immediately log an error indicating to replace the power supply, and we did not want to continually log the error that the PMBus read function creates.\n\nhttps://github.com/openbmc/phosphor-power/commit/f65c406096e3e68fde6b0171283e5a0f51c9753d\n\nSo, making it a bool would change that. The PSUManager uses the hasCommFault() to know if the PEL should be created to call out the power supply: https://github.com/openbmc/phosphor-power/blob/f087f4750c1e50e4db50c99d904d7c05f64fe4c8/phosphor-power-supply/psu_manager.cpp#L463",
      "parentUuid": "7ebbe878_2ae48dc9",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e93aaef5_767d2328",
        "filename": "phosphor-power-supply/power_supply.cpp",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-11T17:19:23Z",
      "side": 1,
      "message": "Would it work if you did:\n if (readFail \u003d\u003d LOG_LIMIT)\n    commit()",
      "parentUuid": "c9eb1108_ec432b95",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f83bc2cd_94f8126c",
        "filename": "pmbus.hpp",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-01-06T21:16:04Z",
      "side": 1,
      "message": "In the commit message, I thought you stated the default was for error tracing to be enabled.  Also, that is the default value in the parent class.\n\nI think it is confusing the modify default parameter values between levels of a class hierarchy.  Callers often don\u0027t know the exact type of an object if they have a pointer to the parent class.",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92ffa6d9_9db09c8d",
        "filename": "pmbus.hpp",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-06T23:19:35Z",
      "side": 1,
      "message": "Oops, only changed the one Jim pointed out. Missed this.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-power/+/49775/2..3/pmbus.hpp#b169\nChanged that from false to true, something Jim pointed out.",
      "parentUuid": "f83bc2cd_94f8126c",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f5d7f59_788da16c",
        "filename": "pmbus.hpp",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2022-01-06T23:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92ffa6d9_9db09c8d",
      "revId": "a522c78b87e992ed8c578eac6509fe3c55c5fdab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}